/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {
        hold_tap: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";
        label = "Gustavo's Corne";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | ' |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  BSPC  | Â´ |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  ;  | ESC  |
            //                    | GUI | LWR | ENT |   | SPC | RSE  | ALT |

            bindings = <
&kp ESCAPE  &kp Q  &kp W                 &kp E              &kp R                   &kp T      &kp Y      &kp U                    &kp I              &kp O                  &kp P     &kp SINGLE_QUOTE
&none       &kp A  &hold_tap LEFT_ALT S  &hold_tap LCTRL D  &hold_tap LEFT_SHIFT F  &kp G      &kp H      &hold_tap RIGHT_SHIFT J  &hold_tap RCTRL K  &hold_tap RIGHT_ALT L  &kp BSPC  &kp NUBS
&kp TAB     &kp Z  &kp X                 &kp C              &kp V                   &kp B      &kp N      &kp M                    &kp COMMA          &kp DOT                &kp SEMI  &kp GRAVE
                                         &kp LGUI           &mo 1                   &kp RET    &kp SPACE  &mo 2                    &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |   `   |
            // | SHFT | OUT_USB | OUT_BLE |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB     &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp N6   &kp N7    &kp N8    &kp N9     &kp N0  &kp BSPC
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans   &trans    &kp UP    &trans     &trans  &trans
&kp LSHFT   &out OUT_USB  &out OUT_BLE  &trans        &trans        &trans          &trans   &kp LEFT  &kp DOWN  &kp RIGHT  &trans  &kp LG(LS(N4))
                                        &kp LGUI      &trans        &kp SPACE       &kp RET  &trans    &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  (  |  )  |  *  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  /   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL      &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp LPAR  &kp RPAR  &kp ASTRK  &kp BSPC
&trans     &kp QUESTION  &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBRC  &kp RBRC  &kp BSLH   &kp FSLH
&kp LSHFT  &trans        &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBKT  &kp RBKT  &kp PIPE   &kp TILDE
                                 &kp LGUI  &trans    &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };

        roof_layer {
            bindings = <
&kp F1  &kp F2          &kp F3      &kp F4  &kp F5  &kp F6    &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &trans          &trans      &trans  &trans  &trans    &trans  &trans  &trans  &trans   &trans   &trans
&to 4   &kp LG(LS(F9))  &kp LG(F9)  &trans  &trans  &trans    &trans  &trans  &trans  &trans   &trans   &trans
                                    &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        gaming {
            bindings = <
&trans  &trans     &trans  &kp W   &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans     &kp A   &kp S   &kp D   &trans    &trans  &trans  &trans  &trans  &trans  &trans
&to 0   &kp LSHFT  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                           &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        Activate_Roof {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
