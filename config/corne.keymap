/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {
        shift_J: shift_J {
            compatible = "zmk,behavior-tap-dance";
            label = "SHIFT_J";
            #binding-cells = <0>;
            bindings = <&hold_tap RIGHT_SHIFT J>, <&kp J>;

            tapping-term-ms = <50>;
        };

        hold_tap: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <19>;
            tapping-term-ms = <200>;
        };

        shitft_f: shitft_f {
            compatible = "zmk,behavior-tap-dance";
            label = "SHITFT_F";
            #binding-cells = <0>;
            bindings = <&hold_tap RIGHT_SHIFT F>, <&kp J>;

            tapping-term-ms = <50>;
        };

        ctrl_d: ctrl_d {
            compatible = "zmk,behavior-tap-dance";
            label = "CTRL_D";
            #binding-cells = <0>;
            bindings = <&hold_tap LEFT_CONTROL D>, <&kp D>;

            tapping-term-ms = <50>;
        };

        ctrl_k: ctrl_k {
            compatible = "zmk,behavior-tap-dance";
            label = "CTRL_K";
            #binding-cells = <0>;
            bindings = <&hold_tap LEFT_CONTROL K>, <&kp K>;

            tapping-term-ms = <50>;
        };

        alt_l: alt_l {
            compatible = "zmk,behavior-tap-dance";
            label = "ALT_L";
            #binding-cells = <0>;
            bindings = <&hold_tap RIGHT_ALT L>, <&kp L>;

            tapping-term-ms = <50>;
        };

        alt_s: alt_s {
            compatible = "zmk,behavior-tap-dance";
            label = "ALT_S";
            #binding-cells = <0>;
            bindings = <&hold_tap LEFT_ALT S>, <&kp S>;

            tapping-term-ms = <50>;
        };
    };

    macros {
        accute: A_accute {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none>;
            label = "A_ACCUTE";
        };
    };

    keymap {
        compatible = "zmk,keymap";
        label = "Gustavo's Corne";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | ' |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  BSPC  | Â´ |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  ;  | ESC  |
            //                    | GUI | LWR | ENT |   | SPC | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q  &kp W   &kp E     &kp R      &kp T      &kp Y      &kp U     &kp I      &kp O    &kp P     &kp SINGLE_QUOTE
&none      &kp A  &alt_s  &ctrl_d   &shitft_f  &kp G      &kp H      &shift_J  &ctrl_k    &alt_l   &kp BSPC  &kp NUBS
&kp LSHFT  &kp Z  &kp X   &kp C     &kp V      &kp B      &kp N      &kp M     &kp COMMA  &kp DOT  &kp SEMI  &kp ESC
                          &kp LGUI  &mo 1      &kp RET    &kp SPACE  &mo 2     &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |   `   |
            // | SHFT | OUT_USB | OUT_BLE |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB     &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp N6    &kp N7    &kp N8    &kp N9     &kp N0  &kp BSPC
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &trans  &accute
&kp LSHFT   &out OUT_USB  &out OUT_BLE  &trans        &trans        &trans          &trans    &trans    &trans    &trans     &trans  &kp PRINTSCREEN
                                        &kp LGUI      &trans        &kp SPACE       &kp RET   &trans    &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  (  |  )  |  *  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  /   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp LPAR  &kp RPAR  &kp ASTRK  &kp BSPC
&kp LCTRL  &trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBRC  &kp RBRC  &kp BSLH   &kp FSLH
&kp LSHFT  &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBKT  &kp RBKT  &kp PIPE   &kp TILDE
                             &kp LGUI  &trans    &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };
    };
};
